@model IEnumerable<Product>

@{
    ViewData["Title"] = "Каталог прикрас";
    // Параметры пагинации
    int pageSize = 9; // Количество товаров на странице
    int totalItems = Model.Count(); // Общее количество товаров
    int currentPage = ViewData["CurrentPage"] as int? ?? 1; // Текущая страница
    int totalPages = (int)Math.Ceiling((double)totalItems / pageSize); // Общее количество страниц
}
<link rel="stylesheet" type="text/css" href="/css/Login.css">

<style>
    /* Стили для пагинации */
    .pagination {
        text-align: center;
        margin-top: 20px;
        margin-bottom: 25px;
        display: flex;
        justify-content: center; /* Центрируем контейнер по горизонтали */
    }

        .pagination a, .pagination span {
            display: inline-block;
            padding: 8px 12px; /* увеличиваем внутренний отступ */
            margin: 0 4px; /* увеличиваем внешний отступ между элементами пагинации */
            border: 2px solid #ccc; /* увеличиваем толщину рамки */
            border-radius: 5px; /* скругляем углы */
            text-decoration: none;
            color: #333;
            line-height: 1.5; /* устанавливаем высоту строки для центрирования */
        }

            .pagination a:hover:not(.active) {
                background-color: #f5f5f5;
                color: #007bff; /* Изменяем цвет текста при наведении на неактивные страницы */
                cursor: pointer; /* Изменяем курсор при наведении на неактивные страницы */
            }

        .pagination .active {
            background-color: #007bff;
            color: #fff;
            cursor: default; /* Устанавливаем стандартный курсор для активной страницы */
        }
</style>



<h1>Каталог прикрас</h1>

<div class="filter-container">
    <div class="filter-item @(ViewData["SelectedSex"] as string == null ? "active" : "")" onclick="filterBySex('')">Всі</div>
    <div class="filter-item @(ViewData["SelectedSex"] as string == "чоловічий" ? "active" : "")" onclick="filterBySex('чоловічий')">Чоловічі</div>
    <div class="filter-item @(ViewData["SelectedSex"] as string == "жіночий" ? "active" : "")" onclick="filterBySex('жіночий')">Жіночі</div>
    <div class="filter-item @(ViewData["SelectedSex"] as string == "дитячий" ? "active" : "")" onclick="filterBySex('дитячий')">Дитячі</div>
</div>

<label for="sortOrder">Сортувати:</label>
<select style="margin-bottom:20px; border-radius: 5px; padding: 5px 10px; border: 1px solid #ccc; font-size: 13px;" name="sortOrder" id="sortOrder">
    <option value="">Обрати варіант сортування</option>
    <option value="name_desc" selected="@(ViewData["NameSortParm"] as string == "name_desc" ? "selected" : null)">Назва: від Я до А</option>
    <option value="name_asc" selected="@(ViewData["NameSortParm"] as string == "name_asc" ? "selected" : null)">Назва: від А до Я</option>
    <option value="price_desc" selected="@(ViewData["PriceSortParm"] as string == "price_desc" ? "selected" : null)">Ціна: від більшої до меншої</option>
    <option value="price_asc" selected="@(ViewData["PriceSortParm"] as string == "price_asc" ? "selected" : null)">Ціна: від меншої до більшої</option>
</select>


<!-- Отображение товаров на странице -->
<div class="product-grid">
    @foreach (var product in Model)
    {
        <div class="product-item">
            <!-- Отобразите информацию о товаре здесь -->
            <a href="@Url.Action("Objc", "Page", new { id = product.p_id })">
                <img src="@product.p_path" alt="@product.p_name" width="100%">
                <p>@product.p_name</p>
                @if (product.ProductDetails.Any())
                {
                    <h3>Ціна - @product.ProductDetails.First().pd_price</h3>
                }
                <p class="buy-button">Купити</p>
            </a>
        </div>
    }
</div>

<!-- Пагинация -->
<div class="pagination">
    @for (int i = 1; i <= (int)ViewData["TotalPages"]; i++)
    {
        if (i == (int)ViewData["CurrentPage"])
        {
            <span class="active">@i</span>
        }
        else
        {
            <a href="@Url.Action("Catalog", "Product", new { sortOrder = ViewData["NameSortParm"], sex = ViewData["SelectedSex"], pageNumber = i })">@i</a>
        }
    }
</div>

<script>
    function filterBySex(sex) {
        window.location.href = '/Product/Catalog?sex=' + sex;
    }

    window.onload = function () {
        var sortOrder = localStorage.getItem('sortOrder');
        var select = document.getElementById('sortOrder');

        if (sortOrder) {
            select.value = sortOrder;
        } else {
            select.value = '';
            localStorage.setItem('sortOrder', '');
        }

        var currentUrl = window.location.href;
        var url = new URL(currentUrl);
        if (select.value === '') {
            url.searchParams.delete('sortOrder');
        } else {
            url.searchParams.set('sortOrder', select.value);
        }
        history.replaceState({}, '', url.href);
    };

    document.getElementById('sortOrder').onchange = function () {
        var selectedSortOrder = this.value;
        localStorage.setItem('sortOrder', selectedSortOrder);

        setTimeout(function () {
            var currentUrl = window.location.href;
            var url = new URL(currentUrl);
            if (selectedSortOrder === '') {
                url.searchParams.delete('sortOrder');
            } else {
                url.searchParams.set('sortOrder', selectedSortOrder);
            }
            window.location.href = url.href;
        }, 200);

        this.blur();
    };
</script>